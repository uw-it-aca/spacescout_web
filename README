NOTE: SpaceScout has been retired. Please see Scout as a replacement - https://github.com/uw-it-aca/scout


This is the web client for SpaceScoutâ„¢.  It connects to services provided by https://github.com/uw-it-aca/spotseeker_server

A live instance of this project can be viewed at http://spacescout.uw.edu/

SpaceScout is a project from the University of Washington.

  Copyright 2012, 2013 UW Information Technology, University of Washington

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.


Below are the settings that should be placed in settings.py. Fill in the value for your own specific app.

SS_LOCATIONS = { 
    'location name': {
        'NAME': ''
        'CENTER_LATITUDE': '' 
        'CENTER_LONGITUDE': ''
        'ZOOM_LEVEL': ''
    },  
}

SS_DEFAULT_LOCATION = ''

# Value should be a boolean
SHOW_IOS_SMART_BANNER = 

# This is the list of zoom levels for which the spaces are clustered by building on the map.  An empty list means no building clustering
SS_BUILDING_CLUSTERING_ZOOM_LEVELS = []

# The ratio (distance between spaces / diagonal distance visible on map) below which spaces will cluster
# together on the map when not clustering by building
# The value should be a double
SS_DISTANCE_CLUSTERING_RATIO = 

FEEDBACK_EMAIL_RECIPIENT = ['']  # The email addresses that the report a problem form will send email to

SS_WEB_SERVER_HOST = ''
# Run ./manage.py create_consumer on the server and copy the key and secret below. You'll also need to go into the admin and make the oauth client "Trusted."
SS_WEB_OAUTH_KEY = ''
SS_WEB_OAUTH_SECRET = ''

SS_APP_SERVER = ''

SS_MAIL_DOMAIN = ''

MOBILE_USER_AGENTS = ''

#Django Compressor - LessCSS Compiler
COMPRESS_ENABLED = True/False
COMPRESS_PRECOMPILERS = (('text/less', 'lessc {infile} {outfile}'),)
